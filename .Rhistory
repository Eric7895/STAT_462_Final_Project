## Data Visualization
hist(is_male)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(ggplot2)
library(janitor)
install.packages(janitor)
install.packages("janitor")
library(janitor)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(ggplot2)
library(janitor)
library(kableExtra)
install.packages("kableExtra")
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(ggplot2)
library(janitor)
library(kableExtra)
# Load Dataset
data <- read.csv("insurance.csv")
# Check for Null Value
na <- sum(is.na(data))
# Create dummy variable
dummy_data <- data %>%
mutate(
is_male = if_else(sex == "male", 1, 0),
is_smoker = if_else(smoker == "yes", 1, 0),
is_southwest = if_else(region == "southwest", 1, 0),
is_southeast = if_else(region == "southeast", 1, 0),
is_northwest = if_else(region == "northwest", 1, 0),
is_northeast = if_else(region == "northeast", 1, 0)
) %>%
select(-sex, -smoker, -region)
# Create standardized dataset for ML that requires scaling
scaled_data <- scale(dummy_data)
# Create a basic statistic table using the quantitative variables of the dataset.
quant <- c("age", "bmi", "children", "charges")
summary_stat <- psych::describe(data[quant], skew = FALSE) %>%
round(2)
summary_stat %>%
kable(
caption = 'Basic statistics of quantitative variables',
booktabs = TRUE,
align = c('l', rep('c', 8))
) %>%
kableExtra::kable_styling(
bootstrap_options = c('striped', 'condensed'),
font_size = 10,
latex_options = "hold_position"
)
## Data Visualization
hist(is_male)
## Data Visualization
hist(dummy_data$is_male)
## Data Visualization
hist(dummy_data$is_male)
table(dummydata$is_male)
## Data Visualization
hist(dummy_data$is_male)
table(dummy_data$is_male)
## Data Visualization
hist(dummy_data$is_male)
table(dummy_data$is_male)
frequency(dummy_data$is_male)
table(dummy_data$is_smoker)
table(dummy_data$is_southwest)
table(dummy_data$is_southeast)
table(dummy_data$northwest)
table(dummy_data$is_northeast)
# These plots are used to visualize the correlation between the plotted variables.
plot(dummy_data$is_male, dummy_data$is_smoker)
# These plots are used to visualize the correlation between the plotted variables.
barplot(dummy_data$is_male, dummy_data$is_smoker)
# These plots are used to visualize the correlation between the plotted variables.
hist(dummy_data$is_male, dummy_data$is_smoker)
# These plots are used to visualize the correlation between the plotted variables.
plot(dummy_data$is_male, dummy_data$is_smoker)
# These plots are used to visualize the correlation between the plotted variables.
plot(data$sex, data$bmi)
# These plots are used to visualize the correlation between the plotted variables.
sex <- (data$sex, na.rm == TRUE)
# These plots are used to visualize the correlation between the plotted variables.
sex <- (data$sex, na.rm = TRUE)
# These plots are used to visualize the correlation between the plotted variables.
sex <- data$sex, na.rm = TRUE
# Clean Dataset
data <- na.omit(data)
# These plots are used to visualize the correlation between the plotted variables.
plot(data$sex, data$bmi)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(ggplot2)
library(janitor)
library(kableExtra)
# Load Dataset
data <- read.csv("insurance.csv")
# These plots are used to visualize the correlation between the plotted variables.
sex <- na.omit(data$sex)
bmi <- na.omit(data$bmi)
plot(data$sex, data$bmi)
plot(sex, bmi)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(ggplot2)
library(janitor)
library(kableExtra)
# Load Dataset
data <- read.csv("insurance.csv")
# Check for Null Value
na <- sum(is.na(data))
# Create dummy variable
dummy_data <- data %>%
mutate(
is_male = if_else(sex == "male", 1, 0),
is_smoker = if_else(smoker == "yes", 1, 0),
is_southwest = if_else(region == "southwest", 1, 0),
is_southeast = if_else(region == "southeast", 1, 0),
is_northwest = if_else(region == "northwest", 1, 0),
is_northeast = if_else(region == "northeast", 1, 0)
) %>%
select(-sex, -smoker, -region)
# Create standardized dataset for ML that requires scaling
scaled_data <- scale(dummy_data)
# Create a basic statistic table using the quantitative variables of the dataset.
quant <- c("age", "bmi", "children", "charges")
summary_stat <- psych::describe(data[quant], skew = FALSE) %>%
round(2)
summary_stat %>%
kable(
caption = 'Basic statistics of quantitative variables',
booktabs = TRUE,
align = c('l', rep('c', 8))
) %>%
kableExtra::kable_styling(
bootstrap_options = c('striped', 'condensed'),
font_size = 10,
latex_options = "hold_position"
)
# These tables display the frequencies of each dummy variable.
table(dummy_data$is_male)
table(dummy_data$is_smoker)
table(dummy_data$is_southwest)
table(dummy_data$is_southeast)
table(dummy_data$northwest)
table(dummy_data$is_northeast)
# These plots are used to visualize the correlation between the plotted variables.
# These plots are used to visualize the correlation between the plotted variables.
plot(data$smoker, data$region)
# These plots are used to visualize the correlation between the plotted variables.
any(is.finite(data$sex))
any(is.finite(data$bmi))
plot(data$age, data$smoker)
age <- na.omit(data$age)
smoker <- na.omit(data$smoker)
plot(data$age, data$smoker)
plot(age, smoker)
# These plots are used to visualize the correlation between the plotted variables.
any(is.finite(data$smoker))
any(is.finite(data$age))
# These plots are used to visualize the correlation between the plotted variables.
plot(data$smoker, data$region)
# These plots are used to visualize the correlation between the plotted variables.
plot(data$smoker, data$region, xlim = 4000)
# These plots are used to visualize the correlation between the plotted variables.
plot(data$smoker, data$region, xlim == 4000)
# These plots are used to visualize the correlation between the plotted variables.
plot(data$smoker, data$age)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(ggplot2)
library(janitor)
library(kableExtra)
# Load Dataset
data <- read.csv("insurance.csv")
# Check for Null Value
na <- sum(is.na(data))
# Create dummy variable
dummy_data <- data %>%
mutate(
is_male = if_else(sex == "male", 1, 0),
is_smoker = if_else(smoker == "yes", 1, 0),
is_southwest = if_else(region == "southwest", 1, 0),
is_southeast = if_else(region == "southeast", 1, 0),
is_northwest = if_else(region == "northwest", 1, 0),
is_northeast = if_else(region == "northeast", 1, 0)
) %>%
select(-sex, -smoker, -region)
# Create standardized dataset for ML that requires scaling
scaled_data <- scale(dummy_data)
# Create a basic statistic table using the quantitative variables of the dataset.
quant <- c("age", "bmi", "children", "charges")
summary_stat <- psych::describe(data[quant], skew = FALSE) %>%
round(2)
summary_stat %>%
kable(
caption = 'Basic statistics of quantitative variables',
booktabs = TRUE,
align = c('l', rep('c', 8))
) %>%
kableExtra::kable_styling(
bootstrap_options = c('striped', 'condensed'),
font_size = 10,
latex_options = "hold_position"
)
# These tables display the frequencies of each dummy variable.
table(dummy_data$is_male)
table(dummy_data$is_smoker)
table(dummy_data$is_southwest)
table(dummy_data$is_southeast)
table(dummy_data$northwest)
table(dummy_data$is_northeast)
# These plots are used to visualize the correlation between the plotted variables.
plot(data$smoker, data$age)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(ggplot2)
library(janitor)
library(kableExtra)
# Load Dataset
data <- read.csv("insurance.csv")
# These tables display the frequencies of each dummy variable.
# These plots are used to visualize the correlation between the plotted variables.
plot(data)
library(ggplot2)
install.packages("esquisse")
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
#library(tidyverse)
#library(ggplot2)
#library(janitor)
#library(kableExtra)
#library(glmnet)
# Load Dataset
data <- read.csv("insurance.csv")
# Diagnostic plot - Residuals vs Fitted values
plot(mlr_model$fitted.values, mlr_model$residuals)
# Building the Multiple Linear Regression model
mlr_model <- lm(charges ~ ., data = scaled_train)
# Doing a 8/2 training, testing splits
set.seed(123)
train_ind <- sample(1:nrow(dummy_data), floor(0.8*nrow(dummy_data)))
# Check for Null Value
na <- sum(is.na(data))
# Create dummy variable
dummy_data <- data %>%
mutate(
is_male = if_else(sex == "male", 1, 0),
is_smoker = if_else(smoker == "yes", 1, 0),
is_southwest = if_else(region == "southwest", 1, 0),
is_southeast = if_else(region == "southeast", 1, 0),
is_northwest = if_else(region == "northwest", 1, 0),
is_northeast = if_else(region == "northeast", 1, 0)
) %>%
select(-sex, -smoker, -region)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
#library(tidyverse)
#library(ggplot2)
#library(janitor)
#library(kableExtra)
#library(glmnet)
# Load Dataset
data <- read.csv("insurance.csv")
# Check for Null Value
na <- sum(is.na(data))
# Create dummy variable
dummy_data <- data %>%
mutate(
is_male = if_else(sex == "male", 1, 0),
is_smoker = if_else(smoker == "yes", 1, 0),
is_southwest = if_else(region == "southwest", 1, 0),
is_southeast = if_else(region == "southeast", 1, 0),
is_northwest = if_else(region == "northwest", 1, 0),
is_northeast = if_else(region == "northeast", 1, 0)
) %>%
select(-sex, -smoker, -region)
install.packages(c("tidyverse", "ggplot2", "janitor", "kableExtra", "glmnet"))
install.packages(c("tidyverse", "ggplot2", "janitor", "kableExtra", "glmnet"))
install.packages(c("tidyverse", "ggplot2", "janitor", "kableExtra", "glmnet"))
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
#library(tidyverse)
#library(ggplot2)
#library(janitor)
#library(kableExtra)
#library(glmnet)
# Load Dataset
data <- read.csv("insurance.csv")
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
install.packages("rlang")
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(tidyverse)
install.packages("rlang")
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
install.packages("rlang")
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(ggplot2)
library(tidyverse)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages(c("askpass", "backports", "bit", "blob", "broom", "cachem", "callr", "checkmate", "cli", "clipr", "colorspace", "commonmark", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "e1071", "evaluate", "expm", "fansi", "farver", "fastmap", "forcats", "fs", "furrr", "future", "gargle", "generics", "ggplot2", "ggrepel", "ggthemes", "gld", "glmnet", "globals", "googledrive", "googlesheets4", "gt", "gtable", "haven", "highr", "hms", "htmltools", "httpuv", "httr", "isoband", "janitor", "jsonlite", "knitr", "labeling", "later", "lifecycle", "listenv", "lme4", "lmom", "lubridate", "magick", "markdown", "mime", "minqa", "mnormt", "modelr", "mvtnorm", "nflfastR", "nflplotR", "nflreadr", "nloptr", "openssl", "parallelly", "pillar", "prettyunits", "processx", "progressr", "promises", "proxy", "ps", "purrr", "qs", "RApiSerialize", "RColorBrewer", "Rcpp", "RcppEigen", "RcppParallel", "readr", "readxl", "rematch", "reprex", "rlang", "rmarkdown", "rootSolve", "rprojroot", "rstudioapi", "rvest", "sass", "scales", "snakecase", "sourcetools", "stringfish", "stringi", "stringr", "svglite", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "V8", "vctrs", "viridisLite", "vroom", "withr", "writexl", "xfun", "xgboost", "xml2", "yaml"))
install.packages(c("askpass", "backports", "bit", "blob", "broom", "cachem", "callr", "checkmate", "cli", "clipr", "colorspace", "commonmark", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "e1071", "evaluate", "expm", "fansi", "farver", "fastmap", "forcats", "fs", "furrr", "future", "gargle", "generics", "ggplot2", "ggrepel", "ggthemes", "gld", "glmnet", "globals", "googledrive", "googlesheets4", "gt", "gtable", "haven", "highr", "hms", "htmltools", "httpuv", "httr", "isoband", "janitor", "jsonlite", "knitr", "labeling", "later", "lifecycle", "listenv", "lme4", "lmom", "lubridate", "magick", "markdown", "mime", "minqa", "mnormt", "modelr", "mvtnorm", "nflfastR", "nflplotR", "nflreadr", "nloptr", "openssl", "parallelly", "pillar", "prettyunits", "processx", "progressr", "promises", "proxy", "ps", "purrr", "qs", "RApiSerialize", "RColorBrewer", "Rcpp", "RcppEigen", "RcppParallel", "readr", "readxl", "rematch", "reprex", "rlang", "rmarkdown", "rootSolve", "rprojroot", "rstudioapi", "rvest", "sass", "scales", "snakecase", "sourcetools", "stringfish", "stringi", "stringr", "svglite", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "V8", "vctrs", "viridisLite", "vroom", "withr", "writexl", "xfun", "xgboost", "xml2", "yaml"))
install.packages(c("askpass", "backports", "bit", "blob", "broom", "cachem", "callr", "checkmate", "cli", "clipr", "colorspace", "commonmark", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "e1071", "evaluate", "expm", "fansi", "farver", "fastmap", "forcats", "fs", "furrr", "future", "gargle", "generics", "ggplot2", "ggrepel", "ggthemes", "gld", "glmnet", "globals", "googledrive", "googlesheets4", "gt", "gtable", "haven", "highr", "hms", "htmltools", "httpuv", "httr", "isoband", "janitor", "jsonlite", "knitr", "labeling", "later", "lifecycle", "listenv", "lme4", "lmom", "lubridate", "magick", "markdown", "mime", "minqa", "mnormt", "modelr", "mvtnorm", "nflfastR", "nflplotR", "nflreadr", "nloptr", "openssl", "parallelly", "pillar", "prettyunits", "processx", "progressr", "promises", "proxy", "ps", "purrr", "qs", "RApiSerialize", "RColorBrewer", "Rcpp", "RcppEigen", "RcppParallel", "readr", "readxl", "rematch", "reprex", "rlang", "rmarkdown", "rootSolve", "rprojroot", "rstudioapi", "rvest", "sass", "scales", "snakecase", "sourcetools", "stringfish", "stringi", "stringr", "svglite", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "V8", "vctrs", "viridisLite", "vroom", "withr", "writexl", "xfun", "xgboost", "xml2", "yaml"))
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = FALSE)
# Load necessary Libraries
library(tidyverse)
install.packages("lifecycle")
